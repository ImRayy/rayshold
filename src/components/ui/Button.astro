---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const buttonVariants = cva(
  "active:scale-95 inline-flex relative items-center justify-center  text-sm font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 dark:hover:text-slate-100 disabled:opacity-50 dark:focus:ring-slate-400 disabled:pointer-events-none dark:focus:ring-offset-slate-900 data-[state=open]:bg-slate-100 dark:data-[state=open]:bg-slate-800",
  {
    variants: {
      variant: {
        default:
          "bg-slate-900 text-white hover:bg-slate-700 dark:bg-slate-50 dark:text-slate-900",
        secondary:
          "bg-slate-100 text-slate-900 hover:bg-slate-200 dark:hover:bg-hover dark:bg-[#2E2E32] dark:text-slate-100",
        link: "bg-transparent dark:bg-transparent underline-offset-4 hover:underline text-slate-900 dark:text-slate-100 hover:bg-transparent dark:hover:bg-transparent",
      },
      width: {
        full: "w-full",
      },
      size: {
        default: "h-10 py-2 px-4",
        sm: "h-8 px-5",
        lg: "h-11 px-8 ",
      },
      rounded: {
        default: "rounded-md",
        full: "rounded-full",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      rounded: "default",
    },
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof buttonVariants> {}

const { variant, width, size, rounded, ...rest } = Astro.props;
---

<button class={buttonVariants({ variant, width, size, rounded })} {...rest}>
  <slot />
</button>
