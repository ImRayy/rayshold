---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

export const buttonVariants = cva(
  "relative inline-flex items-center justify-center text-sm font-medium focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 active:scale-95 disabled:opacity-50 gap-1.5 group/button",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-content",
        outline: "bg-background border-border border hover:bg-hover",
      },
      width: {
        full: "w-full",
      },
      size: {
        default: "h-9 px-4",
        sm: "h-8 px-2",
        lg: "h-11 px-8",
        icon: "size-9",
      },
      rounded: {
        default: "rounded-md",
        full: "rounded-full",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      rounded: "default",
    },
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof buttonVariants> {}

const { variant, width, size, rounded, ...rest } = Astro.props;
---

<button
  class:list={buttonVariants({ variant, width, size, rounded })}
  {...rest}
>
  <slot />
</button>
