---
import Layout from "@layouts/Layout.astro";
import MetaInfo from "@components/blog/MetaInfo.astro";
import { getWordsCount } from "../../utils/helpers";
import TableOfContent from "@components/blog/TableOfContent.astro";
import "../../styles/markdown.css";
import { Image } from "astro:assets";

const { entry } = Astro.props;
const words = getWordsCount(entry.body);
const { Content, headings } = await entry.render();
---

<Layout
  title={`Post | ${entry.data.title}`}
  description={entry.data.description}
>
  <div class="text-core-content">
    <div class="pb-4">
      <!-- TITLE -->
      <h1 class="select-none pb-4 text-4xl capitalize text-core-content">
        {entry.data.title}
      </h1>
      <div
        class="flex select-none items-center gap-3 pb-4 font-medium text-secondary-content"
      >
        <MetaInfo
          date={entry.data.publishDate}
          words={words}
          showWordCount={false}
          className="w-5"
        />
      </div>
    </div>

    <!-- BANNER IMAGE -->
    <div
      class="group relative mb-6 overflow-hidden rounded-xl shadow-xl transition-all"
    >
      <Image
        src={entry.data.image?.src}
        alt={entry.data.image?.alt}
        width={1600}
        height={900}
      />
      {
        entry.data.image?.caption && (
          <div class="absolute bottom-0 hidden h-10 w-full  items-center gap-1 bg-black/40 p-2 backdrop-blur-sm group-hover:inline-flex">
            <a
              href={entry.data.image?.caption}
              class="truncate text-white hover:underline"
              target="_blank"
            >
              {entry.data.image?.caption}
            </a>
          </div>
        )
      }
    </div>
    <!-- TABLE OF CONTENT -->
    <TableOfContent headings={headings} />
    <!-- CONTENT -->
    <div class="prose">
      <Content />
    </div>
  </div>
</Layout>

<script>
  import { addCallouts } from "./callout";
  import { addCopyCodeButton } from "./codeBlock";
  import { setImageSizeLikeObsidian } from "./image";

  const init = () => {
    setImageSizeLikeObsidian();
    addCallouts();
    addCopyCodeButton();
  };

  init();

  const setup = () => {
    window.swup?.hooks.on("page:view", init);
  };

  if (window.swup) {
    setup();
  } else {
    document.addEventListener("swup:enable", setup);
  }
</script>
